// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RequestApplied Shallow Matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RequestApplied
    application={
      Object {
        "createdAt": "Mon Aug 22, 2019 at 2:00pm EDT",
        "message": "Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.",
        "rate": 50,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <SectionTitle
          text="Date Applied"
        />,
        <WithStyles(Typography)
          className="nabi-margin-bottom-small"
        >
          Mon Aug 22, 2019 at 2:00pm EDT
        </WithStyles(Typography)>,
        <SectionTitle
          text="Application"
        />,
        <WithStyles(Typography)
          className="nabi-margin-bottom-xsmall"
        >
          
          <span
            className="nabi-text-uppercase nabi-text-mediumbold"
          >
            Rate:
          </span>
           $50
        </WithStyles(Typography)>,
        <WithStyles(Typography)
          className="nabi-margin-bottom-xsmall"
        >
          <span
            className="nabi-text-uppercase nabi-text-mediumbold"
          >
            Message:
          </span>
        </WithStyles(Typography)>,
        <WithStyles(Typography)>
          Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.
        </WithStyles(Typography)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Date Applied",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Mon Aug 22, 2019 at 2:00pm EDT",
          "className": "nabi-margin-bottom-small",
        },
        "ref": null,
        "rendered": "Mon Aug 22, 2019 at 2:00pm EDT",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Application",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            "",
            <span
              className="nabi-text-uppercase nabi-text-mediumbold"
            >
              Rate:
            </span>,
            " $50",
          ],
          "className": "nabi-margin-bottom-xsmall",
        },
        "ref": null,
        "rendered": Array [
          "",
          Object {
            "instance": null,
            "key": "{rateTextReplace}",
            "nodeType": "host",
            "props": Object {
              "children": "Rate:",
              "className": "nabi-text-uppercase nabi-text-mediumbold",
            },
            "ref": null,
            "rendered": "Rate:",
            "type": "span",
          },
          " $50",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <span
            className="nabi-text-uppercase nabi-text-mediumbold"
          >
            Message:
          </span>,
          "className": "nabi-margin-bottom-xsmall",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Message:",
            "className": "nabi-text-uppercase nabi-text-mediumbold",
          },
          "ref": null,
          "rendered": "Message:",
          "type": "span",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.",
        },
        "ref": null,
        "rendered": "Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.",
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <SectionTitle
            text="Date Applied"
          />,
          <WithStyles(Typography)
            className="nabi-margin-bottom-small"
          >
            Mon Aug 22, 2019 at 2:00pm EDT
          </WithStyles(Typography)>,
          <SectionTitle
            text="Application"
          />,
          <WithStyles(Typography)
            className="nabi-margin-bottom-xsmall"
          >
            
            <span
              className="nabi-text-uppercase nabi-text-mediumbold"
            >
              Rate:
            </span>
             $50
          </WithStyles(Typography)>,
          <WithStyles(Typography)
            className="nabi-margin-bottom-xsmall"
          >
            <span
              className="nabi-text-uppercase nabi-text-mediumbold"
            >
              Message:
            </span>
          </WithStyles(Typography)>,
          <WithStyles(Typography)>
            Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.
          </WithStyles(Typography)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Date Applied",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Mon Aug 22, 2019 at 2:00pm EDT",
            "className": "nabi-margin-bottom-small",
          },
          "ref": null,
          "rendered": "Mon Aug 22, 2019 at 2:00pm EDT",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Application",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "",
              <span
                className="nabi-text-uppercase nabi-text-mediumbold"
              >
                Rate:
              </span>,
              " $50",
            ],
            "className": "nabi-margin-bottom-xsmall",
          },
          "ref": null,
          "rendered": Array [
            "",
            Object {
              "instance": null,
              "key": "{rateTextReplace}",
              "nodeType": "host",
              "props": Object {
                "children": "Rate:",
                "className": "nabi-text-uppercase nabi-text-mediumbold",
              },
              "ref": null,
              "rendered": "Rate:",
              "type": "span",
            },
            " $50",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <span
              className="nabi-text-uppercase nabi-text-mediumbold"
            >
              Message:
            </span>,
            "className": "nabi-margin-bottom-xsmall",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Message:",
              "className": "nabi-text-uppercase nabi-text-mediumbold",
            },
            "ref": null,
            "rendered": "Message:",
            "type": "span",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.",
          },
          "ref": null,
          "rendered": "Hello Sam, I would love to work with your family and typesetting industria  Ipsum is simply dummy.",
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
