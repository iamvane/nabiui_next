// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RequestForm Shallow Matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RequestForm
    addStudent={[MockFunction]}
    age={0}
    allFieldsFilled={false}
    deleteStudent={[MockFunction]}
    handleBlur={[MockFunction]}
    handleCancel={[MockFunction]}
    handleChange={[MockFunction]}
    handleEditSubmit={[MockFunction]}
    handleSubmit={[MockFunction]}
    instrument=""
    isCreatingRequest={false}
    isEditing={false}
    isEditingRequest={false}
    lessonDuration=""
    name=""
    placeForLessons=""
    requestMessage=""
    requestTitle=""
    role="parent"
    skillLevel=""
    students={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "autoComplete": "off",
      "children": Array [
        <SectionTitle
          text="Your Request"
        />,
        <WithStyles(Typography)>
          Add a title (ex: Piano teacher needed)
        </WithStyles(Typography)>,
        <WithStyles(Grid)
          item={true}
          md={7}
        >
          <TextField
            fullWidth={true}
            id="requestTitle"
            margin="normal"
            name="requestTitle"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            required={true}
            select={false}
            value=""
            variant="standard"
          />
        </WithStyles(Grid)>,
        <WithStyles(ListItem)>
          <WithStyles(Typography)
            className="list-text"
          >
            Instrument
          </WithStyles(Typography)>
          <WithStyles(FormControl)
            className="nabi-instruments-select"
          >
            <WithStyles(WithFormControlContext(Select))
              input={
                <WithStyles(Input)
                  id="instrument"
                  name="instrument"
                />
              }
              native={true}
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              value=""
            >
              <option
                disabled={true}
                value=""
              >
                Select instrument
              </option>
              <option
                value="ableton"
              >
                Ableton
              </option>
              <option
                value="accordion"
              >
                Accordion
              </option>
              <option
                value="arranging"
              >
                Arranging
              </option>
              <option
                value="bagpipe"
              >
                Bagpipe
              </option>
              <option
                value="banjo"
              >
                Banjo
              </option>
              <option
                value="bass-electric"
              >
                Bass (Electric)
              </option>
              <option
                value="bass-upright"
              >
                Bass (Upright)
              </option>
              <option
                value="bassoon"
              >
                Bassoon
              </option>
              <option
                value="beatboxing"
              >
                Beatboxing
              </option>
              <option
                value="cello"
              >
                Cello
              </option>
              <option
                value="clarinet"
              >
                Clarinet
              </option>
              <option
                value="clavichord"
              >
                Clavichord
              </option>
              <option
                value="composition"
              >
                Composition
              </option>
              <option
                value="conducting"
              >
                Conducting
              </option>
              <option
                value="djembe"
              >
                Djembe
              </option>
              <option
                value="dobro"
              >
                Dobro
              </option>
              <option
                value="drums"
              >
                Drums
              </option>
              <option
                value="ear-training"
              >
                Ear Training
              </option>
              <option
                value="fiddle"
              >
                Fiddle
              </option>
              <option
                value="finale"
              >
                Finale
              </option>
              <option
                value="flute"
              >
                Flute
              </option>
              <option
                value="french-horn"
              >
                French Horn
              </option>
              <option
                value="garage-band"
              >
                Garage Band
              </option>
              <option
                value="guitar-acoustic"
              >
                Guitar (Acoustic)
              </option>
              <option
                value="guitar-blues"
              >
                Guitar (Blues)
              </option>
              <option
                value="guitar-classical"
              >
                Guitar (Classical)
              </option>
              <option
                value="guitar-electric"
              >
                Guitar (Electric)
              </option>
              <option
                value="harmonica"
              >
                Harmonica
              </option>
              <option
                value="harp"
              >
                Harp
              </option>
              <option
                value="hip-hop-rap"
              >
                Hip Hop & Rap
              </option>
              <option
                value="horn"
              >
                Horn
              </option>
              <option
                value="improvisation"
              >
                Improvisation
              </option>
              <option
                value="logic-pro"
              >
                Logic Pro
              </option>
              <option
                value="mandolin"
              >
                Mandolin
              </option>
              <option
                value="marimba"
              >
                Marimba
              </option>
              <option
                value="maschine"
              >
                Maschine
              </option>
              <option
                value="music-hisroty"
              >
                Music History
              </option>
              <option
                value="music-production"
              >
                Music Production
              </option>
              <option
                value="music-theory"
              >
                Music Theory
              </option>
              <option
                value="oboe"
              >
                Oboe
              </option>
              <option
                value="performance"
              >
                Performance
              </option>
              <option
                value="percussion"
              >
                Percussion
              </option>
              <option
                value="piano"
              >
                Piano
              </option>
              <option
                value="pro-tools"
              >
                Pro Tools
              </option>
              <option
                value="reason"
              >
                Reason
              </option>
              <option
                value="saxophone"
              >
                Saxophone
              </option>
              <option
                value="sibelius"
              >
                Sibelius
              </option>
              <option
                value="sight-reading"
              >
                Sight Reading
              </option>
              <option
                value="sight-singing"
              >
                Sight Singing
              </option>
              <option
                value="singing"
              >
                Singing
              </option>
              <option
                value="sitar"
              >
                Sitar
              </option>
              <option
                value="songwriting"
              >
                Songwriting
              </option>
              <option
                value="sound-design"
              >
                Sound Design
              </option>
              <option
                value="steel-drums"
              >
                Steel Drums
              </option>
              <option
                value="tabla"
              >
                Tabla
              </option>
              <option
                value="tin-whistle"
              >
                Tin Whistle
              </option>
              <option
                value="trombone"
              >
                Trombone
              </option>
              <option
                value="trumpet"
              >
                Trumpet
              </option>
              <option
                value="tuba"
              >
                Tuba
              </option>
              <option
                value="ukulele"
              >
                Ukulele
              </option>
              <option
                value="viola"
              >
                Viola
              </option>
              <option
                value="violin"
              >
                Violin
              </option>
              <option
                value="voice"
              >
                Voice (Singing)
              </option>
              <option
                value="xylophone"
              >
                Xylophone
              </option>
            </WithStyles(WithFormControlContext(Select))>
          </WithStyles(FormControl)>
        </WithStyles(ListItem)>,
        false,
        <WithStyles(ListItem)>
          <WithStyles(Typography)
            className="list-text"
          >
            Place for lessons
          </WithStyles(Typography)>
          <WithStyles(FormControl)
            className="nabi-instruments-select"
          >
            <WithStyles(WithFormControlContext(Select))
              input={
                <WithStyles(Input)
                  id="placeForLessons"
                  name="placeForLessons"
                />
              }
              native={true}
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              value=""
            >
              <option
                disabled={true}
                value=""
              >
                Select place for lessons
              </option>
              <option
                value="home"
              >
                Student's home
              </option>
              <option
                value="studio"
              >
                Instructor's studio
              </option>
              <option
                value="online"
              >
                Online
              </option>
            </WithStyles(WithFormControlContext(Select))>
          </WithStyles(FormControl)>
        </WithStyles(ListItem)>,
        false,
        <WithStyles(ListItem)>
          <WithStyles(Typography)
            className="list-text"
          >
            Lesson duration
          </WithStyles(Typography)>
          <WithStyles(FormControl)
            className="nabi-instruments-select"
          >
            <WithStyles(WithFormControlContext(Select))
              input={
                <WithStyles(Input)
                  id="lessonDuration"
                  name="lessonDuration"
                />
              }
              native={true}
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              value=""
            >
              <option
                disabled={true}
                value=""
              >
                Select lessons duration
              </option>
              <option
                value="30 mins"
              >
                30 mins
              </option>
              <option
                value="45 mins"
              >
                45 mins
              </option>
              <option
                value="60 mins"
              >
                60 mins
              </option>
              <option
                value="90 mins"
              >
                90 mins
              </option>
            </WithStyles(WithFormControlContext(Select))>
          </WithStyles(FormControl)>
        </WithStyles(ListItem)>,
        <div
          className="nabi-margin-top-medium"
        >
          <div
            className="nabi-margin-bottom-medium"
          >
            <Students
              addStudent={[MockFunction]}
              age={0}
              deleteStudent={[MockFunction]}
              handleBlur={[MockFunction]}
              handleChange={[MockFunction]}
              name=""
              skillLevel=""
              students={Array []}
            />
          </div>
          <SectionTitle
            text="Request message"
          />
          <WithStyles(Typography)>
            Add a message. What else would you like candidates to know?
          </WithStyles(Typography)>
          <TextField
            fullWidth={true}
            id="requestMessage"
            margin="normal"
            multiline={true}
            name="requestMessage"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            placeholder="What else would you like candidates to know?"
            required={true}
            rows={6}
            select={false}
            value=""
            variant="standard"
          />
        </div>,
        <WithStyles(Button)
          className="nabi-margin-top-small nabi-text-uppercase"
          color="primary"
          disabled={true}
          onClick={[MockFunction]}
          type="submit"
          variant="contained"
        >
          <UNDEFINED>
            <WithStyles(Icon)
              className="nabi-margin-right-xsmall"
            >
              add
            </WithStyles(Icon)>
            <span
              className="nabi-margin-left-xsmall"
            >
              Add
            </span>
          </UNDEFINED>
        </WithStyles(Button)>,
        <WithStyles(Button)
          className="nabi-margin-top-small nabi-text-uppercase nabi-margin-left-xsmall"
          color="default"
          onClick={[MockFunction]}
          variant="contained"
        >
          <WithStyles(Icon)
            className="nabi-margin-right-xsmall"
          >
            close
          </WithStyles(Icon)>
          <span
            className="nabi-margin-left-xsmall"
          >
            Cancel
          </span>
        </WithStyles(Button)>,
      ],
      "className": "nabi-general-form nabi-margin-top-medium",
      "noValidate": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "Your Request",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Add a title (ex: Piano teacher needed)",
        },
        "ref": null,
        "rendered": "Add a title (ex: Piano teacher needed)",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextField
            fullWidth={true}
            id="requestTitle"
            margin="normal"
            name="requestTitle"
            onBlur={[MockFunction]}
            onChange={[MockFunction]}
            required={true}
            select={false}
            value=""
            variant="standard"
          />,
          "item": true,
          "md": 7,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "fullWidth": true,
            "id": "requestTitle",
            "margin": "normal",
            "name": "requestTitle",
            "onBlur": [MockFunction],
            "onChange": [MockFunction],
            "required": true,
            "select": false,
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="list-text"
            >
              Instrument
            </WithStyles(Typography)>,
            <WithStyles(FormControl)
              className="nabi-instruments-select"
            >
              <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="instrument"
                    name="instrument"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select instrument
                </option>
                <option
                  value="ableton"
                >
                  Ableton
                </option>
                <option
                  value="accordion"
                >
                  Accordion
                </option>
                <option
                  value="arranging"
                >
                  Arranging
                </option>
                <option
                  value="bagpipe"
                >
                  Bagpipe
                </option>
                <option
                  value="banjo"
                >
                  Banjo
                </option>
                <option
                  value="bass-electric"
                >
                  Bass (Electric)
                </option>
                <option
                  value="bass-upright"
                >
                  Bass (Upright)
                </option>
                <option
                  value="bassoon"
                >
                  Bassoon
                </option>
                <option
                  value="beatboxing"
                >
                  Beatboxing
                </option>
                <option
                  value="cello"
                >
                  Cello
                </option>
                <option
                  value="clarinet"
                >
                  Clarinet
                </option>
                <option
                  value="clavichord"
                >
                  Clavichord
                </option>
                <option
                  value="composition"
                >
                  Composition
                </option>
                <option
                  value="conducting"
                >
                  Conducting
                </option>
                <option
                  value="djembe"
                >
                  Djembe
                </option>
                <option
                  value="dobro"
                >
                  Dobro
                </option>
                <option
                  value="drums"
                >
                  Drums
                </option>
                <option
                  value="ear-training"
                >
                  Ear Training
                </option>
                <option
                  value="fiddle"
                >
                  Fiddle
                </option>
                <option
                  value="finale"
                >
                  Finale
                </option>
                <option
                  value="flute"
                >
                  Flute
                </option>
                <option
                  value="french-horn"
                >
                  French Horn
                </option>
                <option
                  value="garage-band"
                >
                  Garage Band
                </option>
                <option
                  value="guitar-acoustic"
                >
                  Guitar (Acoustic)
                </option>
                <option
                  value="guitar-blues"
                >
                  Guitar (Blues)
                </option>
                <option
                  value="guitar-classical"
                >
                  Guitar (Classical)
                </option>
                <option
                  value="guitar-electric"
                >
                  Guitar (Electric)
                </option>
                <option
                  value="harmonica"
                >
                  Harmonica
                </option>
                <option
                  value="harp"
                >
                  Harp
                </option>
                <option
                  value="hip-hop-rap"
                >
                  Hip Hop & Rap
                </option>
                <option
                  value="horn"
                >
                  Horn
                </option>
                <option
                  value="improvisation"
                >
                  Improvisation
                </option>
                <option
                  value="logic-pro"
                >
                  Logic Pro
                </option>
                <option
                  value="mandolin"
                >
                  Mandolin
                </option>
                <option
                  value="marimba"
                >
                  Marimba
                </option>
                <option
                  value="maschine"
                >
                  Maschine
                </option>
                <option
                  value="music-hisroty"
                >
                  Music History
                </option>
                <option
                  value="music-production"
                >
                  Music Production
                </option>
                <option
                  value="music-theory"
                >
                  Music Theory
                </option>
                <option
                  value="oboe"
                >
                  Oboe
                </option>
                <option
                  value="performance"
                >
                  Performance
                </option>
                <option
                  value="percussion"
                >
                  Percussion
                </option>
                <option
                  value="piano"
                >
                  Piano
                </option>
                <option
                  value="pro-tools"
                >
                  Pro Tools
                </option>
                <option
                  value="reason"
                >
                  Reason
                </option>
                <option
                  value="saxophone"
                >
                  Saxophone
                </option>
                <option
                  value="sibelius"
                >
                  Sibelius
                </option>
                <option
                  value="sight-reading"
                >
                  Sight Reading
                </option>
                <option
                  value="sight-singing"
                >
                  Sight Singing
                </option>
                <option
                  value="singing"
                >
                  Singing
                </option>
                <option
                  value="sitar"
                >
                  Sitar
                </option>
                <option
                  value="songwriting"
                >
                  Songwriting
                </option>
                <option
                  value="sound-design"
                >
                  Sound Design
                </option>
                <option
                  value="steel-drums"
                >
                  Steel Drums
                </option>
                <option
                  value="tabla"
                >
                  Tabla
                </option>
                <option
                  value="tin-whistle"
                >
                  Tin Whistle
                </option>
                <option
                  value="trombone"
                >
                  Trombone
                </option>
                <option
                  value="trumpet"
                >
                  Trumpet
                </option>
                <option
                  value="tuba"
                >
                  Tuba
                </option>
                <option
                  value="ukulele"
                >
                  Ukulele
                </option>
                <option
                  value="viola"
                >
                  Viola
                </option>
                <option
                  value="violin"
                >
                  Violin
                </option>
                <option
                  value="voice"
                >
                  Voice (Singing)
                </option>
                <option
                  value="xylophone"
                >
                  Xylophone
                </option>
              </WithStyles(WithFormControlContext(Select))>
            </WithStyles(FormControl)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Instrument",
              "className": "list-text",
            },
            "ref": null,
            "rendered": "Instrument",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="instrument"
                    name="instrument"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select instrument
                </option>
                <option
                  value="ableton"
                >
                  Ableton
                </option>
                <option
                  value="accordion"
                >
                  Accordion
                </option>
                <option
                  value="arranging"
                >
                  Arranging
                </option>
                <option
                  value="bagpipe"
                >
                  Bagpipe
                </option>
                <option
                  value="banjo"
                >
                  Banjo
                </option>
                <option
                  value="bass-electric"
                >
                  Bass (Electric)
                </option>
                <option
                  value="bass-upright"
                >
                  Bass (Upright)
                </option>
                <option
                  value="bassoon"
                >
                  Bassoon
                </option>
                <option
                  value="beatboxing"
                >
                  Beatboxing
                </option>
                <option
                  value="cello"
                >
                  Cello
                </option>
                <option
                  value="clarinet"
                >
                  Clarinet
                </option>
                <option
                  value="clavichord"
                >
                  Clavichord
                </option>
                <option
                  value="composition"
                >
                  Composition
                </option>
                <option
                  value="conducting"
                >
                  Conducting
                </option>
                <option
                  value="djembe"
                >
                  Djembe
                </option>
                <option
                  value="dobro"
                >
                  Dobro
                </option>
                <option
                  value="drums"
                >
                  Drums
                </option>
                <option
                  value="ear-training"
                >
                  Ear Training
                </option>
                <option
                  value="fiddle"
                >
                  Fiddle
                </option>
                <option
                  value="finale"
                >
                  Finale
                </option>
                <option
                  value="flute"
                >
                  Flute
                </option>
                <option
                  value="french-horn"
                >
                  French Horn
                </option>
                <option
                  value="garage-band"
                >
                  Garage Band
                </option>
                <option
                  value="guitar-acoustic"
                >
                  Guitar (Acoustic)
                </option>
                <option
                  value="guitar-blues"
                >
                  Guitar (Blues)
                </option>
                <option
                  value="guitar-classical"
                >
                  Guitar (Classical)
                </option>
                <option
                  value="guitar-electric"
                >
                  Guitar (Electric)
                </option>
                <option
                  value="harmonica"
                >
                  Harmonica
                </option>
                <option
                  value="harp"
                >
                  Harp
                </option>
                <option
                  value="hip-hop-rap"
                >
                  Hip Hop & Rap
                </option>
                <option
                  value="horn"
                >
                  Horn
                </option>
                <option
                  value="improvisation"
                >
                  Improvisation
                </option>
                <option
                  value="logic-pro"
                >
                  Logic Pro
                </option>
                <option
                  value="mandolin"
                >
                  Mandolin
                </option>
                <option
                  value="marimba"
                >
                  Marimba
                </option>
                <option
                  value="maschine"
                >
                  Maschine
                </option>
                <option
                  value="music-hisroty"
                >
                  Music History
                </option>
                <option
                  value="music-production"
                >
                  Music Production
                </option>
                <option
                  value="music-theory"
                >
                  Music Theory
                </option>
                <option
                  value="oboe"
                >
                  Oboe
                </option>
                <option
                  value="performance"
                >
                  Performance
                </option>
                <option
                  value="percussion"
                >
                  Percussion
                </option>
                <option
                  value="piano"
                >
                  Piano
                </option>
                <option
                  value="pro-tools"
                >
                  Pro Tools
                </option>
                <option
                  value="reason"
                >
                  Reason
                </option>
                <option
                  value="saxophone"
                >
                  Saxophone
                </option>
                <option
                  value="sibelius"
                >
                  Sibelius
                </option>
                <option
                  value="sight-reading"
                >
                  Sight Reading
                </option>
                <option
                  value="sight-singing"
                >
                  Sight Singing
                </option>
                <option
                  value="singing"
                >
                  Singing
                </option>
                <option
                  value="sitar"
                >
                  Sitar
                </option>
                <option
                  value="songwriting"
                >
                  Songwriting
                </option>
                <option
                  value="sound-design"
                >
                  Sound Design
                </option>
                <option
                  value="steel-drums"
                >
                  Steel Drums
                </option>
                <option
                  value="tabla"
                >
                  Tabla
                </option>
                <option
                  value="tin-whistle"
                >
                  Tin Whistle
                </option>
                <option
                  value="trombone"
                >
                  Trombone
                </option>
                <option
                  value="trumpet"
                >
                  Trumpet
                </option>
                <option
                  value="tuba"
                >
                  Tuba
                </option>
                <option
                  value="ukulele"
                >
                  Ukulele
                </option>
                <option
                  value="viola"
                >
                  Viola
                </option>
                <option
                  value="violin"
                >
                  Violin
                </option>
                <option
                  value="voice"
                >
                  Voice (Singing)
                </option>
                <option
                  value="xylophone"
                >
                  Xylophone
                </option>
              </WithStyles(WithFormControlContext(Select))>,
              "className": "nabi-instruments-select",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <option
                    disabled={true}
                    value=""
                  >
                    Select instrument
                  </option>,
                  Array [
                    <option
                      value="ableton"
                    >
                      Ableton
                    </option>,
                    <option
                      value="accordion"
                    >
                      Accordion
                    </option>,
                    <option
                      value="arranging"
                    >
                      Arranging
                    </option>,
                    <option
                      value="bagpipe"
                    >
                      Bagpipe
                    </option>,
                    <option
                      value="banjo"
                    >
                      Banjo
                    </option>,
                    <option
                      value="bass-electric"
                    >
                      Bass (Electric)
                    </option>,
                    <option
                      value="bass-upright"
                    >
                      Bass (Upright)
                    </option>,
                    <option
                      value="bassoon"
                    >
                      Bassoon
                    </option>,
                    <option
                      value="beatboxing"
                    >
                      Beatboxing
                    </option>,
                    <option
                      value="cello"
                    >
                      Cello
                    </option>,
                    <option
                      value="clarinet"
                    >
                      Clarinet
                    </option>,
                    <option
                      value="clavichord"
                    >
                      Clavichord
                    </option>,
                    <option
                      value="composition"
                    >
                      Composition
                    </option>,
                    <option
                      value="conducting"
                    >
                      Conducting
                    </option>,
                    <option
                      value="djembe"
                    >
                      Djembe
                    </option>,
                    <option
                      value="dobro"
                    >
                      Dobro
                    </option>,
                    <option
                      value="drums"
                    >
                      Drums
                    </option>,
                    <option
                      value="ear-training"
                    >
                      Ear Training
                    </option>,
                    <option
                      value="fiddle"
                    >
                      Fiddle
                    </option>,
                    <option
                      value="finale"
                    >
                      Finale
                    </option>,
                    <option
                      value="flute"
                    >
                      Flute
                    </option>,
                    <option
                      value="french-horn"
                    >
                      French Horn
                    </option>,
                    <option
                      value="garage-band"
                    >
                      Garage Band
                    </option>,
                    <option
                      value="guitar-acoustic"
                    >
                      Guitar (Acoustic)
                    </option>,
                    <option
                      value="guitar-blues"
                    >
                      Guitar (Blues)
                    </option>,
                    <option
                      value="guitar-classical"
                    >
                      Guitar (Classical)
                    </option>,
                    <option
                      value="guitar-electric"
                    >
                      Guitar (Electric)
                    </option>,
                    <option
                      value="harmonica"
                    >
                      Harmonica
                    </option>,
                    <option
                      value="harp"
                    >
                      Harp
                    </option>,
                    <option
                      value="hip-hop-rap"
                    >
                      Hip Hop & Rap
                    </option>,
                    <option
                      value="horn"
                    >
                      Horn
                    </option>,
                    <option
                      value="improvisation"
                    >
                      Improvisation
                    </option>,
                    <option
                      value="logic-pro"
                    >
                      Logic Pro
                    </option>,
                    <option
                      value="mandolin"
                    >
                      Mandolin
                    </option>,
                    <option
                      value="marimba"
                    >
                      Marimba
                    </option>,
                    <option
                      value="maschine"
                    >
                      Maschine
                    </option>,
                    <option
                      value="music-hisroty"
                    >
                      Music History
                    </option>,
                    <option
                      value="music-production"
                    >
                      Music Production
                    </option>,
                    <option
                      value="music-theory"
                    >
                      Music Theory
                    </option>,
                    <option
                      value="oboe"
                    >
                      Oboe
                    </option>,
                    <option
                      value="performance"
                    >
                      Performance
                    </option>,
                    <option
                      value="percussion"
                    >
                      Percussion
                    </option>,
                    <option
                      value="piano"
                    >
                      Piano
                    </option>,
                    <option
                      value="pro-tools"
                    >
                      Pro Tools
                    </option>,
                    <option
                      value="reason"
                    >
                      Reason
                    </option>,
                    <option
                      value="saxophone"
                    >
                      Saxophone
                    </option>,
                    <option
                      value="sibelius"
                    >
                      Sibelius
                    </option>,
                    <option
                      value="sight-reading"
                    >
                      Sight Reading
                    </option>,
                    <option
                      value="sight-singing"
                    >
                      Sight Singing
                    </option>,
                    <option
                      value="singing"
                    >
                      Singing
                    </option>,
                    <option
                      value="sitar"
                    >
                      Sitar
                    </option>,
                    <option
                      value="songwriting"
                    >
                      Songwriting
                    </option>,
                    <option
                      value="sound-design"
                    >
                      Sound Design
                    </option>,
                    <option
                      value="steel-drums"
                    >
                      Steel Drums
                    </option>,
                    <option
                      value="tabla"
                    >
                      Tabla
                    </option>,
                    <option
                      value="tin-whistle"
                    >
                      Tin Whistle
                    </option>,
                    <option
                      value="trombone"
                    >
                      Trombone
                    </option>,
                    <option
                      value="trumpet"
                    >
                      Trumpet
                    </option>,
                    <option
                      value="tuba"
                    >
                      Tuba
                    </option>,
                    <option
                      value="ukulele"
                    >
                      Ukulele
                    </option>,
                    <option
                      value="viola"
                    >
                      Viola
                    </option>,
                    <option
                      value="violin"
                    >
                      Violin
                    </option>,
                    <option
                      value="voice"
                    >
                      Voice (Singing)
                    </option>,
                    <option
                      value="xylophone"
                    >
                      Xylophone
                    </option>,
                  ],
                ],
                "input": <WithStyles(Input)
                  id="instrument"
                  name="instrument"
                />,
                "native": true,
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select instrument",
                    "disabled": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": "Select instrument",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "ableton",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ableton",
                    "value": "ableton",
                  },
                  "ref": null,
                  "rendered": "Ableton",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "accordion",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Accordion",
                    "value": "accordion",
                  },
                  "ref": null,
                  "rendered": "Accordion",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "arranging",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Arranging",
                    "value": "arranging",
                  },
                  "ref": null,
                  "rendered": "Arranging",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "bagpipe",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bagpipe",
                    "value": "bagpipe",
                  },
                  "ref": null,
                  "rendered": "Bagpipe",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "banjo",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Banjo",
                    "value": "banjo",
                  },
                  "ref": null,
                  "rendered": "Banjo",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "bass-electric",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bass (Electric)",
                    "value": "bass-electric",
                  },
                  "ref": null,
                  "rendered": "Bass (Electric)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "bass-upright",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bass (Upright)",
                    "value": "bass-upright",
                  },
                  "ref": null,
                  "rendered": "Bass (Upright)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "bassoon",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bassoon",
                    "value": "bassoon",
                  },
                  "ref": null,
                  "rendered": "Bassoon",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "beatboxing",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Beatboxing",
                    "value": "beatboxing",
                  },
                  "ref": null,
                  "rendered": "Beatboxing",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "cello",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Cello",
                    "value": "cello",
                  },
                  "ref": null,
                  "rendered": "Cello",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "clarinet",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Clarinet",
                    "value": "clarinet",
                  },
                  "ref": null,
                  "rendered": "Clarinet",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "clavichord",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Clavichord",
                    "value": "clavichord",
                  },
                  "ref": null,
                  "rendered": "Clavichord",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "composition",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Composition",
                    "value": "composition",
                  },
                  "ref": null,
                  "rendered": "Composition",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "conducting",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Conducting",
                    "value": "conducting",
                  },
                  "ref": null,
                  "rendered": "Conducting",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "djembe",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Djembe",
                    "value": "djembe",
                  },
                  "ref": null,
                  "rendered": "Djembe",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "dobro",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Dobro",
                    "value": "dobro",
                  },
                  "ref": null,
                  "rendered": "Dobro",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "drums",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Drums",
                    "value": "drums",
                  },
                  "ref": null,
                  "rendered": "Drums",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "ear-training",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ear Training",
                    "value": "ear-training",
                  },
                  "ref": null,
                  "rendered": "Ear Training",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "fiddle",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Fiddle",
                    "value": "fiddle",
                  },
                  "ref": null,
                  "rendered": "Fiddle",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "finale",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Finale",
                    "value": "finale",
                  },
                  "ref": null,
                  "rendered": "Finale",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "flute",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Flute",
                    "value": "flute",
                  },
                  "ref": null,
                  "rendered": "Flute",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "french-horn",
                  "nodeType": "host",
                  "props": Object {
                    "children": "French Horn",
                    "value": "french-horn",
                  },
                  "ref": null,
                  "rendered": "French Horn",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "garage-band",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Garage Band",
                    "value": "garage-band",
                  },
                  "ref": null,
                  "rendered": "Garage Band",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "guitar-acoustic",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Guitar (Acoustic)",
                    "value": "guitar-acoustic",
                  },
                  "ref": null,
                  "rendered": "Guitar (Acoustic)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "guitar-blues",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Guitar (Blues)",
                    "value": "guitar-blues",
                  },
                  "ref": null,
                  "rendered": "Guitar (Blues)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "guitar-classical",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Guitar (Classical)",
                    "value": "guitar-classical",
                  },
                  "ref": null,
                  "rendered": "Guitar (Classical)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "guitar-electric",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Guitar (Electric)",
                    "value": "guitar-electric",
                  },
                  "ref": null,
                  "rendered": "Guitar (Electric)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "harmonica",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Harmonica",
                    "value": "harmonica",
                  },
                  "ref": null,
                  "rendered": "Harmonica",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "harp",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Harp",
                    "value": "harp",
                  },
                  "ref": null,
                  "rendered": "Harp",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "hip-hop-rap",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Hip Hop & Rap",
                    "value": "hip-hop-rap",
                  },
                  "ref": null,
                  "rendered": "Hip Hop & Rap",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "horn",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Horn",
                    "value": "horn",
                  },
                  "ref": null,
                  "rendered": "Horn",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "improvisation",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Improvisation",
                    "value": "improvisation",
                  },
                  "ref": null,
                  "rendered": "Improvisation",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "logic-pro",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Logic Pro",
                    "value": "logic-pro",
                  },
                  "ref": null,
                  "rendered": "Logic Pro",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "mandolin",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Mandolin",
                    "value": "mandolin",
                  },
                  "ref": null,
                  "rendered": "Mandolin",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "marimba",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Marimba",
                    "value": "marimba",
                  },
                  "ref": null,
                  "rendered": "Marimba",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "maschine",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Maschine",
                    "value": "maschine",
                  },
                  "ref": null,
                  "rendered": "Maschine",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "music-hisroty",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Music History",
                    "value": "music-hisroty",
                  },
                  "ref": null,
                  "rendered": "Music History",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "music-production",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Music Production",
                    "value": "music-production",
                  },
                  "ref": null,
                  "rendered": "Music Production",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "music-theory",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Music Theory",
                    "value": "music-theory",
                  },
                  "ref": null,
                  "rendered": "Music Theory",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "oboe",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Oboe",
                    "value": "oboe",
                  },
                  "ref": null,
                  "rendered": "Oboe",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "performance",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Performance",
                    "value": "performance",
                  },
                  "ref": null,
                  "rendered": "Performance",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "percussion",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Percussion",
                    "value": "percussion",
                  },
                  "ref": null,
                  "rendered": "Percussion",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "piano",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Piano",
                    "value": "piano",
                  },
                  "ref": null,
                  "rendered": "Piano",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "pro-tools",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Pro Tools",
                    "value": "pro-tools",
                  },
                  "ref": null,
                  "rendered": "Pro Tools",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "reason",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Reason",
                    "value": "reason",
                  },
                  "ref": null,
                  "rendered": "Reason",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "saxophone",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Saxophone",
                    "value": "saxophone",
                  },
                  "ref": null,
                  "rendered": "Saxophone",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "sibelius",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sibelius",
                    "value": "sibelius",
                  },
                  "ref": null,
                  "rendered": "Sibelius",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "sight-reading",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sight Reading",
                    "value": "sight-reading",
                  },
                  "ref": null,
                  "rendered": "Sight Reading",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "sight-singing",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sight Singing",
                    "value": "sight-singing",
                  },
                  "ref": null,
                  "rendered": "Sight Singing",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "singing",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Singing",
                    "value": "singing",
                  },
                  "ref": null,
                  "rendered": "Singing",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "sitar",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sitar",
                    "value": "sitar",
                  },
                  "ref": null,
                  "rendered": "Sitar",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "songwriting",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Songwriting",
                    "value": "songwriting",
                  },
                  "ref": null,
                  "rendered": "Songwriting",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "sound-design",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Sound Design",
                    "value": "sound-design",
                  },
                  "ref": null,
                  "rendered": "Sound Design",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "steel-drums",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Steel Drums",
                    "value": "steel-drums",
                  },
                  "ref": null,
                  "rendered": "Steel Drums",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "tabla",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tabla",
                    "value": "tabla",
                  },
                  "ref": null,
                  "rendered": "Tabla",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "tin-whistle",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tin Whistle",
                    "value": "tin-whistle",
                  },
                  "ref": null,
                  "rendered": "Tin Whistle",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "trombone",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Trombone",
                    "value": "trombone",
                  },
                  "ref": null,
                  "rendered": "Trombone",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "trumpet",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Trumpet",
                    "value": "trumpet",
                  },
                  "ref": null,
                  "rendered": "Trumpet",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "tuba",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tuba",
                    "value": "tuba",
                  },
                  "ref": null,
                  "rendered": "Tuba",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "ukulele",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Ukulele",
                    "value": "ukulele",
                  },
                  "ref": null,
                  "rendered": "Ukulele",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "viola",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Viola",
                    "value": "viola",
                  },
                  "ref": null,
                  "rendered": "Viola",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "violin",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Violin",
                    "value": "violin",
                  },
                  "ref": null,
                  "rendered": "Violin",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "voice",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Voice (Singing)",
                    "value": "voice",
                  },
                  "ref": null,
                  "rendered": "Voice (Singing)",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "xylophone",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Xylophone",
                    "value": "xylophone",
                  },
                  "ref": null,
                  "rendered": "Xylophone",
                  "type": "option",
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="list-text"
            >
              Place for lessons
            </WithStyles(Typography)>,
            <WithStyles(FormControl)
              className="nabi-instruments-select"
            >
              <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="placeForLessons"
                    name="placeForLessons"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select place for lessons
                </option>
                <option
                  value="home"
                >
                  Student's home
                </option>
                <option
                  value="studio"
                >
                  Instructor's studio
                </option>
                <option
                  value="online"
                >
                  Online
                </option>
              </WithStyles(WithFormControlContext(Select))>
            </WithStyles(FormControl)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Place for lessons",
              "className": "list-text",
            },
            "ref": null,
            "rendered": "Place for lessons",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="placeForLessons"
                    name="placeForLessons"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select place for lessons
                </option>
                <option
                  value="home"
                >
                  Student's home
                </option>
                <option
                  value="studio"
                >
                  Instructor's studio
                </option>
                <option
                  value="online"
                >
                  Online
                </option>
              </WithStyles(WithFormControlContext(Select))>,
              "className": "nabi-instruments-select",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <option
                    disabled={true}
                    value=""
                  >
                    Select place for lessons
                  </option>,
                  Array [
                    <option
                      value="home"
                    >
                      Student's home
                    </option>,
                    <option
                      value="studio"
                    >
                      Instructor's studio
                    </option>,
                    <option
                      value="online"
                    >
                      Online
                    </option>,
                  ],
                ],
                "input": <WithStyles(Input)
                  id="placeForLessons"
                  name="placeForLessons"
                />,
                "native": true,
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select place for lessons",
                    "disabled": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": "Select place for lessons",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Home",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Student's home",
                    "value": "home",
                  },
                  "ref": null,
                  "rendered": "Student's home",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Studio",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Instructor's studio",
                    "value": "studio",
                  },
                  "ref": null,
                  "rendered": "Instructor's studio",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "Online",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Online",
                    "value": "online",
                  },
                  "ref": null,
                  "rendered": "Online",
                  "type": "option",
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Typography)
              className="list-text"
            >
              Lesson duration
            </WithStyles(Typography)>,
            <WithStyles(FormControl)
              className="nabi-instruments-select"
            >
              <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="lessonDuration"
                    name="lessonDuration"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select lessons duration
                </option>
                <option
                  value="30 mins"
                >
                  30 mins
                </option>
                <option
                  value="45 mins"
                >
                  45 mins
                </option>
                <option
                  value="60 mins"
                >
                  60 mins
                </option>
                <option
                  value="90 mins"
                >
                  90 mins
                </option>
              </WithStyles(WithFormControlContext(Select))>
            </WithStyles(FormControl)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Lesson duration",
              "className": "list-text",
            },
            "ref": null,
            "rendered": "Lesson duration",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="lessonDuration"
                    name="lessonDuration"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select lessons duration
                </option>
                <option
                  value="30 mins"
                >
                  30 mins
                </option>
                <option
                  value="45 mins"
                >
                  45 mins
                </option>
                <option
                  value="60 mins"
                >
                  60 mins
                </option>
                <option
                  value="90 mins"
                >
                  90 mins
                </option>
              </WithStyles(WithFormControlContext(Select))>,
              "className": "nabi-instruments-select",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <option
                    disabled={true}
                    value=""
                  >
                    Select lessons duration
                  </option>,
                  Array [
                    <option
                      value="30 mins"
                    >
                      30 mins
                    </option>,
                    <option
                      value="45 mins"
                    >
                      45 mins
                    </option>,
                    <option
                      value="60 mins"
                    >
                      60 mins
                    </option>,
                    <option
                      value="90 mins"
                    >
                      90 mins
                    </option>,
                  ],
                ],
                "input": <WithStyles(Input)
                  id="lessonDuration"
                  name="lessonDuration"
                />,
                "native": true,
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "value": "",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select lessons duration",
                    "disabled": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": "Select lessons duration",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "thirtyMins",
                  "nodeType": "host",
                  "props": Object {
                    "children": "30 mins",
                    "value": "30 mins",
                  },
                  "ref": null,
                  "rendered": "30 mins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "fortyFiveMins",
                  "nodeType": "host",
                  "props": Object {
                    "children": "45 mins",
                    "value": "45 mins",
                  },
                  "ref": null,
                  "rendered": "45 mins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "sixtyMins",
                  "nodeType": "host",
                  "props": Object {
                    "children": "60 mins",
                    "value": "60 mins",
                  },
                  "ref": null,
                  "rendered": "60 mins",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "ninetyMins",
                  "nodeType": "host",
                  "props": Object {
                    "children": "90 mins",
                    "value": "90 mins",
                  },
                  "ref": null,
                  "rendered": "90 mins",
                  "type": "option",
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="nabi-margin-bottom-medium"
            >
              <Students
                addStudent={[MockFunction]}
                age={0}
                deleteStudent={[MockFunction]}
                handleBlur={[MockFunction]}
                handleChange={[MockFunction]}
                name=""
                skillLevel=""
                students={Array []}
              />
            </div>,
            <SectionTitle
              text="Request message"
            />,
            <WithStyles(Typography)>
              Add a message. What else would you like candidates to know?
            </WithStyles(Typography)>,
            <TextField
              fullWidth={true}
              id="requestMessage"
              margin="normal"
              multiline={true}
              name="requestMessage"
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              placeholder="What else would you like candidates to know?"
              required={true}
              rows={6}
              select={false}
              value=""
              variant="standard"
            />,
          ],
          "className": "nabi-margin-top-medium",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Students
                addStudent={[MockFunction]}
                age={0}
                deleteStudent={[MockFunction]}
                handleBlur={[MockFunction]}
                handleChange={[MockFunction]}
                name=""
                skillLevel=""
                students={Array []}
              />,
              "className": "nabi-margin-bottom-medium",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "addStudent": [MockFunction],
                "age": 0,
                "deleteStudent": [MockFunction],
                "handleBlur": [MockFunction],
                "handleChange": [MockFunction],
                "name": "",
                "skillLevel": "",
                "students": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "text": "Request message",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add a message. What else would you like candidates to know?",
            },
            "ref": null,
            "rendered": "Add a message. What else would you like candidates to know?",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fullWidth": true,
              "id": "requestMessage",
              "margin": "normal",
              "multiline": true,
              "name": "requestMessage",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "placeholder": "What else would you like candidates to know?",
              "required": true,
              "rows": 6,
              "select": false,
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <UNDEFINED>
            <WithStyles(Icon)
              className="nabi-margin-right-xsmall"
            >
              add
            </WithStyles(Icon)>
            <span
              className="nabi-margin-left-xsmall"
            >
              Add
            </span>
          </UNDEFINED>,
          "className": "nabi-margin-top-small nabi-text-uppercase",
          "color": "primary",
          "disabled": true,
          "onClick": [MockFunction],
          "type": "submit",
          "variant": "contained",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <WithStyles(Icon)
                className="nabi-margin-right-xsmall"
              >
                add
              </WithStyles(Icon)>,
              <span
                className="nabi-margin-left-xsmall"
              >
                Add
              </span>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "add",
                "className": "nabi-margin-right-xsmall",
              },
              "ref": null,
              "rendered": "add",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add",
                "className": "nabi-margin-left-xsmall",
              },
              "ref": null,
              "rendered": "Add",
              "type": "span",
            },
          ],
          "type": Symbol(react.fragment),
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Icon)
              className="nabi-margin-right-xsmall"
            >
              close
            </WithStyles(Icon)>,
            <span
              className="nabi-margin-left-xsmall"
            >
              Cancel
            </span>,
          ],
          "className": "nabi-margin-top-small nabi-text-uppercase nabi-margin-left-xsmall",
          "color": "default",
          "onClick": [MockFunction],
          "variant": "contained",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "close",
              "className": "nabi-margin-right-xsmall",
            },
            "ref": null,
            "rendered": "close",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Cancel",
              "className": "nabi-margin-left-xsmall",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": "span",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "autoComplete": "off",
        "children": Array [
          <SectionTitle
            text="Your Request"
          />,
          <WithStyles(Typography)>
            Add a title (ex: Piano teacher needed)
          </WithStyles(Typography)>,
          <WithStyles(Grid)
            item={true}
            md={7}
          >
            <TextField
              fullWidth={true}
              id="requestTitle"
              margin="normal"
              name="requestTitle"
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />
          </WithStyles(Grid)>,
          <WithStyles(ListItem)>
            <WithStyles(Typography)
              className="list-text"
            >
              Instrument
            </WithStyles(Typography)>
            <WithStyles(FormControl)
              className="nabi-instruments-select"
            >
              <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="instrument"
                    name="instrument"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select instrument
                </option>
                <option
                  value="ableton"
                >
                  Ableton
                </option>
                <option
                  value="accordion"
                >
                  Accordion
                </option>
                <option
                  value="arranging"
                >
                  Arranging
                </option>
                <option
                  value="bagpipe"
                >
                  Bagpipe
                </option>
                <option
                  value="banjo"
                >
                  Banjo
                </option>
                <option
                  value="bass-electric"
                >
                  Bass (Electric)
                </option>
                <option
                  value="bass-upright"
                >
                  Bass (Upright)
                </option>
                <option
                  value="bassoon"
                >
                  Bassoon
                </option>
                <option
                  value="beatboxing"
                >
                  Beatboxing
                </option>
                <option
                  value="cello"
                >
                  Cello
                </option>
                <option
                  value="clarinet"
                >
                  Clarinet
                </option>
                <option
                  value="clavichord"
                >
                  Clavichord
                </option>
                <option
                  value="composition"
                >
                  Composition
                </option>
                <option
                  value="conducting"
                >
                  Conducting
                </option>
                <option
                  value="djembe"
                >
                  Djembe
                </option>
                <option
                  value="dobro"
                >
                  Dobro
                </option>
                <option
                  value="drums"
                >
                  Drums
                </option>
                <option
                  value="ear-training"
                >
                  Ear Training
                </option>
                <option
                  value="fiddle"
                >
                  Fiddle
                </option>
                <option
                  value="finale"
                >
                  Finale
                </option>
                <option
                  value="flute"
                >
                  Flute
                </option>
                <option
                  value="french-horn"
                >
                  French Horn
                </option>
                <option
                  value="garage-band"
                >
                  Garage Band
                </option>
                <option
                  value="guitar-acoustic"
                >
                  Guitar (Acoustic)
                </option>
                <option
                  value="guitar-blues"
                >
                  Guitar (Blues)
                </option>
                <option
                  value="guitar-classical"
                >
                  Guitar (Classical)
                </option>
                <option
                  value="guitar-electric"
                >
                  Guitar (Electric)
                </option>
                <option
                  value="harmonica"
                >
                  Harmonica
                </option>
                <option
                  value="harp"
                >
                  Harp
                </option>
                <option
                  value="hip-hop-rap"
                >
                  Hip Hop & Rap
                </option>
                <option
                  value="horn"
                >
                  Horn
                </option>
                <option
                  value="improvisation"
                >
                  Improvisation
                </option>
                <option
                  value="logic-pro"
                >
                  Logic Pro
                </option>
                <option
                  value="mandolin"
                >
                  Mandolin
                </option>
                <option
                  value="marimba"
                >
                  Marimba
                </option>
                <option
                  value="maschine"
                >
                  Maschine
                </option>
                <option
                  value="music-hisroty"
                >
                  Music History
                </option>
                <option
                  value="music-production"
                >
                  Music Production
                </option>
                <option
                  value="music-theory"
                >
                  Music Theory
                </option>
                <option
                  value="oboe"
                >
                  Oboe
                </option>
                <option
                  value="performance"
                >
                  Performance
                </option>
                <option
                  value="percussion"
                >
                  Percussion
                </option>
                <option
                  value="piano"
                >
                  Piano
                </option>
                <option
                  value="pro-tools"
                >
                  Pro Tools
                </option>
                <option
                  value="reason"
                >
                  Reason
                </option>
                <option
                  value="saxophone"
                >
                  Saxophone
                </option>
                <option
                  value="sibelius"
                >
                  Sibelius
                </option>
                <option
                  value="sight-reading"
                >
                  Sight Reading
                </option>
                <option
                  value="sight-singing"
                >
                  Sight Singing
                </option>
                <option
                  value="singing"
                >
                  Singing
                </option>
                <option
                  value="sitar"
                >
                  Sitar
                </option>
                <option
                  value="songwriting"
                >
                  Songwriting
                </option>
                <option
                  value="sound-design"
                >
                  Sound Design
                </option>
                <option
                  value="steel-drums"
                >
                  Steel Drums
                </option>
                <option
                  value="tabla"
                >
                  Tabla
                </option>
                <option
                  value="tin-whistle"
                >
                  Tin Whistle
                </option>
                <option
                  value="trombone"
                >
                  Trombone
                </option>
                <option
                  value="trumpet"
                >
                  Trumpet
                </option>
                <option
                  value="tuba"
                >
                  Tuba
                </option>
                <option
                  value="ukulele"
                >
                  Ukulele
                </option>
                <option
                  value="viola"
                >
                  Viola
                </option>
                <option
                  value="violin"
                >
                  Violin
                </option>
                <option
                  value="voice"
                >
                  Voice (Singing)
                </option>
                <option
                  value="xylophone"
                >
                  Xylophone
                </option>
              </WithStyles(WithFormControlContext(Select))>
            </WithStyles(FormControl)>
          </WithStyles(ListItem)>,
          false,
          <WithStyles(ListItem)>
            <WithStyles(Typography)
              className="list-text"
            >
              Place for lessons
            </WithStyles(Typography)>
            <WithStyles(FormControl)
              className="nabi-instruments-select"
            >
              <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="placeForLessons"
                    name="placeForLessons"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select place for lessons
                </option>
                <option
                  value="home"
                >
                  Student's home
                </option>
                <option
                  value="studio"
                >
                  Instructor's studio
                </option>
                <option
                  value="online"
                >
                  Online
                </option>
              </WithStyles(WithFormControlContext(Select))>
            </WithStyles(FormControl)>
          </WithStyles(ListItem)>,
          false,
          <WithStyles(ListItem)>
            <WithStyles(Typography)
              className="list-text"
            >
              Lesson duration
            </WithStyles(Typography)>
            <WithStyles(FormControl)
              className="nabi-instruments-select"
            >
              <WithStyles(WithFormControlContext(Select))
                input={
                  <WithStyles(Input)
                    id="lessonDuration"
                    name="lessonDuration"
                  />
                }
                native={true}
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                value=""
              >
                <option
                  disabled={true}
                  value=""
                >
                  Select lessons duration
                </option>
                <option
                  value="30 mins"
                >
                  30 mins
                </option>
                <option
                  value="45 mins"
                >
                  45 mins
                </option>
                <option
                  value="60 mins"
                >
                  60 mins
                </option>
                <option
                  value="90 mins"
                >
                  90 mins
                </option>
              </WithStyles(WithFormControlContext(Select))>
            </WithStyles(FormControl)>
          </WithStyles(ListItem)>,
          <div
            className="nabi-margin-top-medium"
          >
            <div
              className="nabi-margin-bottom-medium"
            >
              <Students
                addStudent={[MockFunction]}
                age={0}
                deleteStudent={[MockFunction]}
                handleBlur={[MockFunction]}
                handleChange={[MockFunction]}
                name=""
                skillLevel=""
                students={Array []}
              />
            </div>
            <SectionTitle
              text="Request message"
            />
            <WithStyles(Typography)>
              Add a message. What else would you like candidates to know?
            </WithStyles(Typography)>
            <TextField
              fullWidth={true}
              id="requestMessage"
              margin="normal"
              multiline={true}
              name="requestMessage"
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              placeholder="What else would you like candidates to know?"
              required={true}
              rows={6}
              select={false}
              value=""
              variant="standard"
            />
          </div>,
          <WithStyles(Button)
            className="nabi-margin-top-small nabi-text-uppercase"
            color="primary"
            disabled={true}
            onClick={[MockFunction]}
            type="submit"
            variant="contained"
          >
            <UNDEFINED>
              <WithStyles(Icon)
                className="nabi-margin-right-xsmall"
              >
                add
              </WithStyles(Icon)>
              <span
                className="nabi-margin-left-xsmall"
              >
                Add
              </span>
            </UNDEFINED>
          </WithStyles(Button)>,
          <WithStyles(Button)
            className="nabi-margin-top-small nabi-text-uppercase nabi-margin-left-xsmall"
            color="default"
            onClick={[MockFunction]}
            variant="contained"
          >
            <WithStyles(Icon)
              className="nabi-margin-right-xsmall"
            >
              close
            </WithStyles(Icon)>
            <span
              className="nabi-margin-left-xsmall"
            >
              Cancel
            </span>
          </WithStyles(Button)>,
        ],
        "className": "nabi-general-form nabi-margin-top-medium",
        "noValidate": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "Your Request",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Add a title (ex: Piano teacher needed)",
          },
          "ref": null,
          "rendered": "Add a title (ex: Piano teacher needed)",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextField
              fullWidth={true}
              id="requestTitle"
              margin="normal"
              name="requestTitle"
              onBlur={[MockFunction]}
              onChange={[MockFunction]}
              required={true}
              select={false}
              value=""
              variant="standard"
            />,
            "item": true,
            "md": 7,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fullWidth": true,
              "id": "requestTitle",
              "margin": "normal",
              "name": "requestTitle",
              "onBlur": [MockFunction],
              "onChange": [MockFunction],
              "required": true,
              "select": false,
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="list-text"
              >
                Instrument
              </WithStyles(Typography)>,
              <WithStyles(FormControl)
                className="nabi-instruments-select"
              >
                <WithStyles(WithFormControlContext(Select))
                  input={
                    <WithStyles(Input)
                      id="instrument"
                      name="instrument"
                    />
                  }
                  native={true}
                  onBlur={[MockFunction]}
                  onChange={[MockFunction]}
                  value=""
                >
                  <option
                    disabled={true}
                    value=""
                  >
                    Select instrument
                  </option>
                  <option
                    value="ableton"
                  >
                    Ableton
                  </option>
                  <option
                    value="accordion"
                  >
                    Accordion
                  </option>
                  <option
                    value="arranging"
                  >
                    Arranging
                  </option>
                  <option
                    value="bagpipe"
                  >
                    Bagpipe
                  </option>
                  <option
                    value="banjo"
                  >
                    Banjo
                  </option>
                  <option
                    value="bass-electric"
                  >
                    Bass (Electric)
                  </option>
                  <option
                    value="bass-upright"
                  >
                    Bass (Upright)
                  </option>
                  <option
                    value="bassoon"
                  >
                    Bassoon
                  </option>
                  <option
                    value="beatboxing"
                  >
                    Beatboxing
                  </option>
                  <option
                    value="cello"
                  >
                    Cello
                  </option>
                  <option
                    value="clarinet"
                  >
                    Clarinet
                  </option>
                  <option
                    value="clavichord"
                  >
                    Clavichord
                  </option>
                  <option
                    value="composition"
                  >
                    Composition
                  </option>
                  <option
                    value="conducting"
                  >
                    Conducting
                  </option>
                  <option
                    value="djembe"
                  >
                    Djembe
                  </option>
                  <option
                    value="dobro"
                  >
                    Dobro
                  </option>
                  <option
                    value="drums"
                  >
                    Drums
                  </option>
                  <option
                    value="ear-training"
                  >
                    Ear Training
                  </option>
                  <option
                    value="fiddle"
                  >
                    Fiddle
                  </option>
                  <option
                    value="finale"
                  >
                    Finale
                  </option>
                  <option
                    value="flute"
                  >
                    Flute
                  </option>
                  <option
                    value="french-horn"
                  >
                    French Horn
                  </option>
                  <option
                    value="garage-band"
                  >
                    Garage Band
                  </option>
                  <option
                    value="guitar-acoustic"
                  >
                    Guitar (Acoustic)
                  </option>
                  <option
                    value="guitar-blues"
                  >
                    Guitar (Blues)
                  </option>
                  <option
                    value="guitar-classical"
                  >
                    Guitar (Classical)
                  </option>
                  <option
                    value="guitar-electric"
                  >
                    Guitar (Electric)
                  </option>
                  <option
                    value="harmonica"
                  >
                    Harmonica
                  </option>
                  <option
                    value="harp"
                  >
                    Harp
                  </option>
                  <option
                    value="hip-hop-rap"
                  >
                    Hip Hop & Rap
                  </option>
                  <option
                    value="horn"
                  >
                    Horn
                  </option>
                  <option
                    value="improvisation"
                  >
                    Improvisation
                  </option>
                  <option
                    value="logic-pro"
                  >
                    Logic Pro
                  </option>
                  <option
                    value="mandolin"
                  >
                    Mandolin
                  </option>
                  <option
                    value="marimba"
                  >
                    Marimba
                  </option>
                  <option
                    value="maschine"
                  >
                    Maschine
                  </option>
                  <option
                    value="music-hisroty"
                  >
                    Music History
                  </option>
                  <option
                    value="music-production"
                  >
                    Music Production
                  </option>
                  <option
                    value="music-theory"
                  >
                    Music Theory
                  </option>
                  <option
                    value="oboe"
                  >
                    Oboe
                  </option>
                  <option
                    value="performance"
                  >
                    Performance
                  </option>
                  <option
                    value="percussion"
                  >
                    Percussion
                  </option>
                  <option
                    value="piano"
                  >
                    Piano
                  </option>
                  <option
                    value="pro-tools"
                  >
                    Pro Tools
                  </option>
                  <option
                    value="reason"
                  >
                    Reason
                  </option>
                  <option
                    value="saxophone"
                  >
                    Saxophone
                  </option>
                  <option
                    value="sibelius"
                  >
                    Sibelius
                  </option>
                  <option
                    value="sight-reading"
                  >
                    Sight Reading
                  </option>
                  <option
                    value="sight-singing"
                  >
                    Sight Singing
                  </option>
                  <option
                    value="singing"
                  >
                    Singing
                  </option>
                  <option
                    value="sitar"
                  >
                    Sitar
                  </option>
                  <option
                    value="songwriting"
                  >
                    Songwriting
                  </option>
                  <option
                    value="sound-design"
                  >
                    Sound Design
                  </option>
                  <option
                    value="steel-drums"
                  >
                    Steel Drums
                  </option>
                  <option
                    value="tabla"
                  >
                    Tabla
                  </option>
                  <option
                    value="tin-whistle"
                  >
                    Tin Whistle
                  </option>
                  <option
                    value="trombone"
                  >
                    Trombone
                  </option>
                  <option
                    value="trumpet"
                  >
                    Trumpet
                  </option>
                  <option
                    value="tuba"
                  >
                    Tuba
                  </option>
                  <option
                    value="ukulele"
                  >
                    Ukulele
                  </option>
                  <option
                    value="viola"
                  >
                    Viola
                  </option>
                  <option
                    value="violin"
                  >
                    Violin
                  </option>
                  <option
                    value="voice"
                  >
                    Voice (Singing)
                  </option>
                  <option
                    value="xylophone"
                  >
                    Xylophone
                  </option>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Instrument",
                "className": "list-text",
              },
              "ref": null,
              "rendered": "Instrument",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(WithFormControlContext(Select))
                  input={
                    <WithStyles(Input)
                      id="instrument"
                      name="instrument"
                    />
                  }
                  native={true}
                  onBlur={[MockFunction]}
                  onChange={[MockFunction]}
                  value=""
                >
                  <option
                    disabled={true}
                    value=""
                  >
                    Select instrument
                  </option>
                  <option
                    value="ableton"
                  >
                    Ableton
                  </option>
                  <option
                    value="accordion"
                  >
                    Accordion
                  </option>
                  <option
                    value="arranging"
                  >
                    Arranging
                  </option>
                  <option
                    value="bagpipe"
                  >
                    Bagpipe
                  </option>
                  <option
                    value="banjo"
                  >
                    Banjo
                  </option>
                  <option
                    value="bass-electric"
                  >
                    Bass (Electric)
                  </option>
                  <option
                    value="bass-upright"
                  >
                    Bass (Upright)
                  </option>
                  <option
                    value="bassoon"
                  >
                    Bassoon
                  </option>
                  <option
                    value="beatboxing"
                  >
                    Beatboxing
                  </option>
                  <option
                    value="cello"
                  >
                    Cello
                  </option>
                  <option
                    value="clarinet"
                  >
                    Clarinet
                  </option>
                  <option
                    value="clavichord"
                  >
                    Clavichord
                  </option>
                  <option
                    value="composition"
                  >
                    Composition
                  </option>
                  <option
                    value="conducting"
                  >
                    Conducting
                  </option>
                  <option
                    value="djembe"
                  >
                    Djembe
                  </option>
                  <option
                    value="dobro"
                  >
                    Dobro
                  </option>
                  <option
                    value="drums"
                  >
                    Drums
                  </option>
                  <option
                    value="ear-training"
                  >
                    Ear Training
                  </option>
                  <option
                    value="fiddle"
                  >
                    Fiddle
                  </option>
                  <option
                    value="finale"
                  >
                    Finale
                  </option>
                  <option
                    value="flute"
                  >
                    Flute
                  </option>
                  <option
                    value="french-horn"
                  >
                    French Horn
                  </option>
                  <option
                    value="garage-band"
                  >
                    Garage Band
                  </option>
                  <option
                    value="guitar-acoustic"
                  >
                    Guitar (Acoustic)
                  </option>
                  <option
                    value="guitar-blues"
                  >
                    Guitar (Blues)
                  </option>
                  <option
                    value="guitar-classical"
                  >
                    Guitar (Classical)
                  </option>
                  <option
                    value="guitar-electric"
                  >
                    Guitar (Electric)
                  </option>
                  <option
                    value="harmonica"
                  >
                    Harmonica
                  </option>
                  <option
                    value="harp"
                  >
                    Harp
                  </option>
                  <option
                    value="hip-hop-rap"
                  >
                    Hip Hop & Rap
                  </option>
                  <option
                    value="horn"
                  >
                    Horn
                  </option>
                  <option
                    value="improvisation"
                  >
                    Improvisation
                  </option>
                  <option
                    value="logic-pro"
                  >
                    Logic Pro
                  </option>
                  <option
                    value="mandolin"
                  >
                    Mandolin
                  </option>
                  <option
                    value="marimba"
                  >
                    Marimba
                  </option>
                  <option
                    value="maschine"
                  >
                    Maschine
                  </option>
                  <option
                    value="music-hisroty"
                  >
                    Music History
                  </option>
                  <option
                    value="music-production"
                  >
                    Music Production
                  </option>
                  <option
                    value="music-theory"
                  >
                    Music Theory
                  </option>
                  <option
                    value="oboe"
                  >
                    Oboe
                  </option>
                  <option
                    value="performance"
                  >
                    Performance
                  </option>
                  <option
                    value="percussion"
                  >
                    Percussion
                  </option>
                  <option
                    value="piano"
                  >
                    Piano
                  </option>
                  <option
                    value="pro-tools"
                  >
                    Pro Tools
                  </option>
                  <option
                    value="reason"
                  >
                    Reason
                  </option>
                  <option
                    value="saxophone"
                  >
                    Saxophone
                  </option>
                  <option
                    value="sibelius"
                  >
                    Sibelius
                  </option>
                  <option
                    value="sight-reading"
                  >
                    Sight Reading
                  </option>
                  <option
                    value="sight-singing"
                  >
                    Sight Singing
                  </option>
                  <option
                    value="singing"
                  >
                    Singing
                  </option>
                  <option
                    value="sitar"
                  >
                    Sitar
                  </option>
                  <option
                    value="songwriting"
                  >
                    Songwriting
                  </option>
                  <option
                    value="sound-design"
                  >
                    Sound Design
                  </option>
                  <option
                    value="steel-drums"
                  >
                    Steel Drums
                  </option>
                  <option
                    value="tabla"
                  >
                    Tabla
                  </option>
                  <option
                    value="tin-whistle"
                  >
                    Tin Whistle
                  </option>
                  <option
                    value="trombone"
                  >
                    Trombone
                  </option>
                  <option
                    value="trumpet"
                  >
                    Trumpet
                  </option>
                  <option
                    value="tuba"
                  >
                    Tuba
                  </option>
                  <option
                    value="ukulele"
                  >
                    Ukulele
                  </option>
                  <option
                    value="viola"
                  >
                    Viola
                  </option>
                  <option
                    value="violin"
                  >
                    Violin
                  </option>
                  <option
                    value="voice"
                  >
                    Voice (Singing)
                  </option>
                  <option
                    value="xylophone"
                  >
                    Xylophone
                  </option>
                </WithStyles(WithFormControlContext(Select))>,
                "className": "nabi-instruments-select",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <option
                      disabled={true}
                      value=""
                    >
                      Select instrument
                    </option>,
                    Array [
                      <option
                        value="ableton"
                      >
                        Ableton
                      </option>,
                      <option
                        value="accordion"
                      >
                        Accordion
                      </option>,
                      <option
                        value="arranging"
                      >
                        Arranging
                      </option>,
                      <option
                        value="bagpipe"
                      >
                        Bagpipe
                      </option>,
                      <option
                        value="banjo"
                      >
                        Banjo
                      </option>,
                      <option
                        value="bass-electric"
                      >
                        Bass (Electric)
                      </option>,
                      <option
                        value="bass-upright"
                      >
                        Bass (Upright)
                      </option>,
                      <option
                        value="bassoon"
                      >
                        Bassoon
                      </option>,
                      <option
                        value="beatboxing"
                      >
                        Beatboxing
                      </option>,
                      <option
                        value="cello"
                      >
                        Cello
                      </option>,
                      <option
                        value="clarinet"
                      >
                        Clarinet
                      </option>,
                      <option
                        value="clavichord"
                      >
                        Clavichord
                      </option>,
                      <option
                        value="composition"
                      >
                        Composition
                      </option>,
                      <option
                        value="conducting"
                      >
                        Conducting
                      </option>,
                      <option
                        value="djembe"
                      >
                        Djembe
                      </option>,
                      <option
                        value="dobro"
                      >
                        Dobro
                      </option>,
                      <option
                        value="drums"
                      >
                        Drums
                      </option>,
                      <option
                        value="ear-training"
                      >
                        Ear Training
                      </option>,
                      <option
                        value="fiddle"
                      >
                        Fiddle
                      </option>,
                      <option
                        value="finale"
                      >
                        Finale
                      </option>,
                      <option
                        value="flute"
                      >
                        Flute
                      </option>,
                      <option
                        value="french-horn"
                      >
                        French Horn
                      </option>,
                      <option
                        value="garage-band"
                      >
                        Garage Band
                      </option>,
                      <option
                        value="guitar-acoustic"
                      >
                        Guitar (Acoustic)
                      </option>,
                      <option
                        value="guitar-blues"
                      >
                        Guitar (Blues)
                      </option>,
                      <option
                        value="guitar-classical"
                      >
                        Guitar (Classical)
                      </option>,
                      <option
                        value="guitar-electric"
                      >
                        Guitar (Electric)
                      </option>,
                      <option
                        value="harmonica"
                      >
                        Harmonica
                      </option>,
                      <option
                        value="harp"
                      >
                        Harp
                      </option>,
                      <option
                        value="hip-hop-rap"
                      >
                        Hip Hop & Rap
                      </option>,
                      <option
                        value="horn"
                      >
                        Horn
                      </option>,
                      <option
                        value="improvisation"
                      >
                        Improvisation
                      </option>,
                      <option
                        value="logic-pro"
                      >
                        Logic Pro
                      </option>,
                      <option
                        value="mandolin"
                      >
                        Mandolin
                      </option>,
                      <option
                        value="marimba"
                      >
                        Marimba
                      </option>,
                      <option
                        value="maschine"
                      >
                        Maschine
                      </option>,
                      <option
                        value="music-hisroty"
                      >
                        Music History
                      </option>,
                      <option
                        value="music-production"
                      >
                        Music Production
                      </option>,
                      <option
                        value="music-theory"
                      >
                        Music Theory
                      </option>,
                      <option
                        value="oboe"
                      >
                        Oboe
                      </option>,
                      <option
                        value="performance"
                      >
                        Performance
                      </option>,
                      <option
                        value="percussion"
                      >
                        Percussion
                      </option>,
                      <option
                        value="piano"
                      >
                        Piano
                      </option>,
                      <option
                        value="pro-tools"
                      >
                        Pro Tools
                      </option>,
                      <option
                        value="reason"
                      >
                        Reason
                      </option>,
                      <option
                        value="saxophone"
                      >
                        Saxophone
                      </option>,
                      <option
                        value="sibelius"
                      >
                        Sibelius
                      </option>,
                      <option
                        value="sight-reading"
                      >
                        Sight Reading
                      </option>,
                      <option
                        value="sight-singing"
                      >
                        Sight Singing
                      </option>,
                      <option
                        value="singing"
                      >
                        Singing
                      </option>,
                      <option
                        value="sitar"
                      >
                        Sitar
                      </option>,
                      <option
                        value="songwriting"
                      >
                        Songwriting
                      </option>,
                      <option
                        value="sound-design"
                      >
                        Sound Design
                      </option>,
                      <option
                        value="steel-drums"
                      >
                        Steel Drums
                      </option>,
                      <option
                        value="tabla"
                      >
                        Tabla
                      </option>,
                      <option
                        value="tin-whistle"
                      >
                        Tin Whistle
                      </option>,
                      <option
                        value="trombone"
                      >
                        Trombone
                      </option>,
                      <option
                        value="trumpet"
                      >
                        Trumpet
                      </option>,
                      <option
                        value="tuba"
                      >
                        Tuba
                      </option>,
                      <option
                        value="ukulele"
                      >
                        Ukulele
                      </option>,
                      <option
                        value="viola"
                      >
                        Viola
                      </option>,
                      <option
                        value="violin"
                      >
                        Violin
                      </option>,
                      <option
                        value="voice"
                      >
                        Voice (Singing)
                      </option>,
                      <option
                        value="xylophone"
                      >
                        Xylophone
                      </option>,
                    ],
                  ],
                  "input": <WithStyles(Input)
                    id="instrument"
                    name="instrument"
                  />,
                  "native": true,
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Select instrument",
                      "disabled": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": "Select instrument",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "ableton",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Ableton",
                      "value": "ableton",
                    },
                    "ref": null,
                    "rendered": "Ableton",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "accordion",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Accordion",
                      "value": "accordion",
                    },
                    "ref": null,
                    "rendered": "Accordion",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "arranging",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Arranging",
                      "value": "arranging",
                    },
                    "ref": null,
                    "rendered": "Arranging",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "bagpipe",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Bagpipe",
                      "value": "bagpipe",
                    },
                    "ref": null,
                    "rendered": "Bagpipe",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "banjo",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Banjo",
                      "value": "banjo",
                    },
                    "ref": null,
                    "rendered": "Banjo",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "bass-electric",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Bass (Electric)",
                      "value": "bass-electric",
                    },
                    "ref": null,
                    "rendered": "Bass (Electric)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "bass-upright",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Bass (Upright)",
                      "value": "bass-upright",
                    },
                    "ref": null,
                    "rendered": "Bass (Upright)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "bassoon",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Bassoon",
                      "value": "bassoon",
                    },
                    "ref": null,
                    "rendered": "Bassoon",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "beatboxing",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Beatboxing",
                      "value": "beatboxing",
                    },
                    "ref": null,
                    "rendered": "Beatboxing",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "cello",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Cello",
                      "value": "cello",
                    },
                    "ref": null,
                    "rendered": "Cello",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "clarinet",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Clarinet",
                      "value": "clarinet",
                    },
                    "ref": null,
                    "rendered": "Clarinet",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "clavichord",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Clavichord",
                      "value": "clavichord",
                    },
                    "ref": null,
                    "rendered": "Clavichord",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "composition",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Composition",
                      "value": "composition",
                    },
                    "ref": null,
                    "rendered": "Composition",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "conducting",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Conducting",
                      "value": "conducting",
                    },
                    "ref": null,
                    "rendered": "Conducting",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "djembe",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Djembe",
                      "value": "djembe",
                    },
                    "ref": null,
                    "rendered": "Djembe",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "dobro",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Dobro",
                      "value": "dobro",
                    },
                    "ref": null,
                    "rendered": "Dobro",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "drums",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Drums",
                      "value": "drums",
                    },
                    "ref": null,
                    "rendered": "Drums",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "ear-training",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Ear Training",
                      "value": "ear-training",
                    },
                    "ref": null,
                    "rendered": "Ear Training",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "fiddle",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Fiddle",
                      "value": "fiddle",
                    },
                    "ref": null,
                    "rendered": "Fiddle",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "finale",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Finale",
                      "value": "finale",
                    },
                    "ref": null,
                    "rendered": "Finale",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "flute",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Flute",
                      "value": "flute",
                    },
                    "ref": null,
                    "rendered": "Flute",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "french-horn",
                    "nodeType": "host",
                    "props": Object {
                      "children": "French Horn",
                      "value": "french-horn",
                    },
                    "ref": null,
                    "rendered": "French Horn",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "garage-band",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Garage Band",
                      "value": "garage-band",
                    },
                    "ref": null,
                    "rendered": "Garage Band",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "guitar-acoustic",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Guitar (Acoustic)",
                      "value": "guitar-acoustic",
                    },
                    "ref": null,
                    "rendered": "Guitar (Acoustic)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "guitar-blues",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Guitar (Blues)",
                      "value": "guitar-blues",
                    },
                    "ref": null,
                    "rendered": "Guitar (Blues)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "guitar-classical",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Guitar (Classical)",
                      "value": "guitar-classical",
                    },
                    "ref": null,
                    "rendered": "Guitar (Classical)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "guitar-electric",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Guitar (Electric)",
                      "value": "guitar-electric",
                    },
                    "ref": null,
                    "rendered": "Guitar (Electric)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "harmonica",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Harmonica",
                      "value": "harmonica",
                    },
                    "ref": null,
                    "rendered": "Harmonica",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "harp",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Harp",
                      "value": "harp",
                    },
                    "ref": null,
                    "rendered": "Harp",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "hip-hop-rap",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Hip Hop & Rap",
                      "value": "hip-hop-rap",
                    },
                    "ref": null,
                    "rendered": "Hip Hop & Rap",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "horn",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Horn",
                      "value": "horn",
                    },
                    "ref": null,
                    "rendered": "Horn",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "improvisation",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Improvisation",
                      "value": "improvisation",
                    },
                    "ref": null,
                    "rendered": "Improvisation",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "logic-pro",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Logic Pro",
                      "value": "logic-pro",
                    },
                    "ref": null,
                    "rendered": "Logic Pro",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "mandolin",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Mandolin",
                      "value": "mandolin",
                    },
                    "ref": null,
                    "rendered": "Mandolin",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "marimba",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Marimba",
                      "value": "marimba",
                    },
                    "ref": null,
                    "rendered": "Marimba",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "maschine",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Maschine",
                      "value": "maschine",
                    },
                    "ref": null,
                    "rendered": "Maschine",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "music-hisroty",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Music History",
                      "value": "music-hisroty",
                    },
                    "ref": null,
                    "rendered": "Music History",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "music-production",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Music Production",
                      "value": "music-production",
                    },
                    "ref": null,
                    "rendered": "Music Production",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "music-theory",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Music Theory",
                      "value": "music-theory",
                    },
                    "ref": null,
                    "rendered": "Music Theory",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "oboe",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Oboe",
                      "value": "oboe",
                    },
                    "ref": null,
                    "rendered": "Oboe",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "performance",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Performance",
                      "value": "performance",
                    },
                    "ref": null,
                    "rendered": "Performance",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "percussion",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Percussion",
                      "value": "percussion",
                    },
                    "ref": null,
                    "rendered": "Percussion",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "piano",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Piano",
                      "value": "piano",
                    },
                    "ref": null,
                    "rendered": "Piano",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "pro-tools",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Pro Tools",
                      "value": "pro-tools",
                    },
                    "ref": null,
                    "rendered": "Pro Tools",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "reason",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Reason",
                      "value": "reason",
                    },
                    "ref": null,
                    "rendered": "Reason",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "saxophone",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Saxophone",
                      "value": "saxophone",
                    },
                    "ref": null,
                    "rendered": "Saxophone",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "sibelius",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sibelius",
                      "value": "sibelius",
                    },
                    "ref": null,
                    "rendered": "Sibelius",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "sight-reading",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sight Reading",
                      "value": "sight-reading",
                    },
                    "ref": null,
                    "rendered": "Sight Reading",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "sight-singing",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sight Singing",
                      "value": "sight-singing",
                    },
                    "ref": null,
                    "rendered": "Sight Singing",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "singing",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Singing",
                      "value": "singing",
                    },
                    "ref": null,
                    "rendered": "Singing",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "sitar",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sitar",
                      "value": "sitar",
                    },
                    "ref": null,
                    "rendered": "Sitar",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "songwriting",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Songwriting",
                      "value": "songwriting",
                    },
                    "ref": null,
                    "rendered": "Songwriting",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "sound-design",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Sound Design",
                      "value": "sound-design",
                    },
                    "ref": null,
                    "rendered": "Sound Design",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "steel-drums",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Steel Drums",
                      "value": "steel-drums",
                    },
                    "ref": null,
                    "rendered": "Steel Drums",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "tabla",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Tabla",
                      "value": "tabla",
                    },
                    "ref": null,
                    "rendered": "Tabla",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "tin-whistle",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Tin Whistle",
                      "value": "tin-whistle",
                    },
                    "ref": null,
                    "rendered": "Tin Whistle",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "trombone",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Trombone",
                      "value": "trombone",
                    },
                    "ref": null,
                    "rendered": "Trombone",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "trumpet",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Trumpet",
                      "value": "trumpet",
                    },
                    "ref": null,
                    "rendered": "Trumpet",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "tuba",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Tuba",
                      "value": "tuba",
                    },
                    "ref": null,
                    "rendered": "Tuba",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "ukulele",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Ukulele",
                      "value": "ukulele",
                    },
                    "ref": null,
                    "rendered": "Ukulele",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "viola",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Viola",
                      "value": "viola",
                    },
                    "ref": null,
                    "rendered": "Viola",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "violin",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Violin",
                      "value": "violin",
                    },
                    "ref": null,
                    "rendered": "Violin",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "voice",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Voice (Singing)",
                      "value": "voice",
                    },
                    "ref": null,
                    "rendered": "Voice (Singing)",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "xylophone",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Xylophone",
                      "value": "xylophone",
                    },
                    "ref": null,
                    "rendered": "Xylophone",
                    "type": "option",
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="list-text"
              >
                Place for lessons
              </WithStyles(Typography)>,
              <WithStyles(FormControl)
                className="nabi-instruments-select"
              >
                <WithStyles(WithFormControlContext(Select))
                  input={
                    <WithStyles(Input)
                      id="placeForLessons"
                      name="placeForLessons"
                    />
                  }
                  native={true}
                  onBlur={[MockFunction]}
                  onChange={[MockFunction]}
                  value=""
                >
                  <option
                    disabled={true}
                    value=""
                  >
                    Select place for lessons
                  </option>
                  <option
                    value="home"
                  >
                    Student's home
                  </option>
                  <option
                    value="studio"
                  >
                    Instructor's studio
                  </option>
                  <option
                    value="online"
                  >
                    Online
                  </option>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Place for lessons",
                "className": "list-text",
              },
              "ref": null,
              "rendered": "Place for lessons",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(WithFormControlContext(Select))
                  input={
                    <WithStyles(Input)
                      id="placeForLessons"
                      name="placeForLessons"
                    />
                  }
                  native={true}
                  onBlur={[MockFunction]}
                  onChange={[MockFunction]}
                  value=""
                >
                  <option
                    disabled={true}
                    value=""
                  >
                    Select place for lessons
                  </option>
                  <option
                    value="home"
                  >
                    Student's home
                  </option>
                  <option
                    value="studio"
                  >
                    Instructor's studio
                  </option>
                  <option
                    value="online"
                  >
                    Online
                  </option>
                </WithStyles(WithFormControlContext(Select))>,
                "className": "nabi-instruments-select",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <option
                      disabled={true}
                      value=""
                    >
                      Select place for lessons
                    </option>,
                    Array [
                      <option
                        value="home"
                      >
                        Student's home
                      </option>,
                      <option
                        value="studio"
                      >
                        Instructor's studio
                      </option>,
                      <option
                        value="online"
                      >
                        Online
                      </option>,
                    ],
                  ],
                  "input": <WithStyles(Input)
                    id="placeForLessons"
                    name="placeForLessons"
                  />,
                  "native": true,
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Select place for lessons",
                      "disabled": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": "Select place for lessons",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Home",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Student's home",
                      "value": "home",
                    },
                    "ref": null,
                    "rendered": "Student's home",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Studio",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Instructor's studio",
                      "value": "studio",
                    },
                    "ref": null,
                    "rendered": "Instructor's studio",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "Online",
                    "nodeType": "host",
                    "props": Object {
                      "children": "Online",
                      "value": "online",
                    },
                    "ref": null,
                    "rendered": "Online",
                    "type": "option",
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Typography)
                className="list-text"
              >
                Lesson duration
              </WithStyles(Typography)>,
              <WithStyles(FormControl)
                className="nabi-instruments-select"
              >
                <WithStyles(WithFormControlContext(Select))
                  input={
                    <WithStyles(Input)
                      id="lessonDuration"
                      name="lessonDuration"
                    />
                  }
                  native={true}
                  onBlur={[MockFunction]}
                  onChange={[MockFunction]}
                  value=""
                >
                  <option
                    disabled={true}
                    value=""
                  >
                    Select lessons duration
                  </option>
                  <option
                    value="30 mins"
                  >
                    30 mins
                  </option>
                  <option
                    value="45 mins"
                  >
                    45 mins
                  </option>
                  <option
                    value="60 mins"
                  >
                    60 mins
                  </option>
                  <option
                    value="90 mins"
                  >
                    90 mins
                  </option>
                </WithStyles(WithFormControlContext(Select))>
              </WithStyles(FormControl)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Lesson duration",
                "className": "list-text",
              },
              "ref": null,
              "rendered": "Lesson duration",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(WithFormControlContext(Select))
                  input={
                    <WithStyles(Input)
                      id="lessonDuration"
                      name="lessonDuration"
                    />
                  }
                  native={true}
                  onBlur={[MockFunction]}
                  onChange={[MockFunction]}
                  value=""
                >
                  <option
                    disabled={true}
                    value=""
                  >
                    Select lessons duration
                  </option>
                  <option
                    value="30 mins"
                  >
                    30 mins
                  </option>
                  <option
                    value="45 mins"
                  >
                    45 mins
                  </option>
                  <option
                    value="60 mins"
                  >
                    60 mins
                  </option>
                  <option
                    value="90 mins"
                  >
                    90 mins
                  </option>
                </WithStyles(WithFormControlContext(Select))>,
                "className": "nabi-instruments-select",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <option
                      disabled={true}
                      value=""
                    >
                      Select lessons duration
                    </option>,
                    Array [
                      <option
                        value="30 mins"
                      >
                        30 mins
                      </option>,
                      <option
                        value="45 mins"
                      >
                        45 mins
                      </option>,
                      <option
                        value="60 mins"
                      >
                        60 mins
                      </option>,
                      <option
                        value="90 mins"
                      >
                        90 mins
                      </option>,
                    ],
                  ],
                  "input": <WithStyles(Input)
                    id="lessonDuration"
                    name="lessonDuration"
                  />,
                  "native": true,
                  "onBlur": [MockFunction],
                  "onChange": [MockFunction],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Select lessons duration",
                      "disabled": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": "Select lessons duration",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "thirtyMins",
                    "nodeType": "host",
                    "props": Object {
                      "children": "30 mins",
                      "value": "30 mins",
                    },
                    "ref": null,
                    "rendered": "30 mins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "fortyFiveMins",
                    "nodeType": "host",
                    "props": Object {
                      "children": "45 mins",
                      "value": "45 mins",
                    },
                    "ref": null,
                    "rendered": "45 mins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "sixtyMins",
                    "nodeType": "host",
                    "props": Object {
                      "children": "60 mins",
                      "value": "60 mins",
                    },
                    "ref": null,
                    "rendered": "60 mins",
                    "type": "option",
                  },
                  Object {
                    "instance": null,
                    "key": "ninetyMins",
                    "nodeType": "host",
                    "props": Object {
                      "children": "90 mins",
                      "value": "90 mins",
                    },
                    "ref": null,
                    "rendered": "90 mins",
                    "type": "option",
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="nabi-margin-bottom-medium"
              >
                <Students
                  addStudent={[MockFunction]}
                  age={0}
                  deleteStudent={[MockFunction]}
                  handleBlur={[MockFunction]}
                  handleChange={[MockFunction]}
                  name=""
                  skillLevel=""
                  students={Array []}
                />
              </div>,
              <SectionTitle
                text="Request message"
              />,
              <WithStyles(Typography)>
                Add a message. What else would you like candidates to know?
              </WithStyles(Typography)>,
              <TextField
                fullWidth={true}
                id="requestMessage"
                margin="normal"
                multiline={true}
                name="requestMessage"
                onBlur={[MockFunction]}
                onChange={[MockFunction]}
                placeholder="What else would you like candidates to know?"
                required={true}
                rows={6}
                select={false}
                value=""
                variant="standard"
              />,
            ],
            "className": "nabi-margin-top-medium",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Students
                  addStudent={[MockFunction]}
                  age={0}
                  deleteStudent={[MockFunction]}
                  handleBlur={[MockFunction]}
                  handleChange={[MockFunction]}
                  name=""
                  skillLevel=""
                  students={Array []}
                />,
                "className": "nabi-margin-bottom-medium",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "addStudent": [MockFunction],
                  "age": 0,
                  "deleteStudent": [MockFunction],
                  "handleBlur": [MockFunction],
                  "handleChange": [MockFunction],
                  "name": "",
                  "skillLevel": "",
                  "students": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "text": "Request message",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add a message. What else would you like candidates to know?",
              },
              "ref": null,
              "rendered": "Add a message. What else would you like candidates to know?",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fullWidth": true,
                "id": "requestMessage",
                "margin": "normal",
                "multiline": true,
                "name": "requestMessage",
                "onBlur": [MockFunction],
                "onChange": [MockFunction],
                "placeholder": "What else would you like candidates to know?",
                "required": true,
                "rows": 6,
                "select": false,
                "value": "",
                "variant": "standard",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <UNDEFINED>
              <WithStyles(Icon)
                className="nabi-margin-right-xsmall"
              >
                add
              </WithStyles(Icon)>
              <span
                className="nabi-margin-left-xsmall"
              >
                Add
              </span>
            </UNDEFINED>,
            "className": "nabi-margin-top-small nabi-text-uppercase",
            "color": "primary",
            "disabled": true,
            "onClick": [MockFunction],
            "type": "submit",
            "variant": "contained",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <WithStyles(Icon)
                  className="nabi-margin-right-xsmall"
                >
                  add
                </WithStyles(Icon)>,
                <span
                  className="nabi-margin-left-xsmall"
                >
                  Add
                </span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "add",
                  "className": "nabi-margin-right-xsmall",
                },
                "ref": null,
                "rendered": "add",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add",
                  "className": "nabi-margin-left-xsmall",
                },
                "ref": null,
                "rendered": "Add",
                "type": "span",
              },
            ],
            "type": Symbol(react.fragment),
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Icon)
                className="nabi-margin-right-xsmall"
              >
                close
              </WithStyles(Icon)>,
              <span
                className="nabi-margin-left-xsmall"
              >
                Cancel
              </span>,
            ],
            "className": "nabi-margin-top-small nabi-text-uppercase nabi-margin-left-xsmall",
            "color": "default",
            "onClick": [MockFunction],
            "variant": "contained",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "close",
                "className": "nabi-margin-right-xsmall",
              },
              "ref": null,
              "rendered": "close",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "className": "nabi-margin-left-xsmall",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "span",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
